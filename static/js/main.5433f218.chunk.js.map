{"version":3,"sources":["logo.svg","utils/utils.tsx","components/AppHeader.tsx","utils/enums.tsx","components/extra/TokenInput.tsx","utils/constants.tsx","components/Modals.tsx","components/TokenPicker.tsx","components/DexDataPanel.tsx","components/AppStatusBar.tsx","components/TokenList.tsx","components/Welcome.tsx","App.tsx","reportWebVitals.ts","index.tsx","config/config.js"],"names":["formatPrice","quantity","decimals","Intl","NumberFormat","minimumFractionDigits","format","formatPriceUI","maximumSignificantDigits","formatPrice2","Img","styled","img","Header","header","Title","h1","Logo","div","PageButton","Button","JazzTitle","span","BalanceButtonBlock","BalanceBlock","ConnectButton","props","makeNewState","rpcProvider","metamask","provider","chainId","title","variant","currentAccount","diameter","seed","jsNumberForAddress","style","marginLeft","slice","pending","Spinner","animation","size","useState","buttonState","setButtonState","useEffect","width","marginRight","hidden","pageId","disabled","onClick","window","ethereum","connectMetamask","prevState","open","focus","AppHeader","hrefOptions","href","parseFloat","balance","setBalance","timer","setTimeout","Web3","eth","getBalance","then","bal","clearTimeout","appState","blockNumber","balanceString","balanceBackground","maximumFractionDigits","src","logo","alt","e","document","location","backgroundColor","ORDER_SIDE","ORDER_TYPE","Input","input","TokenInput","isEditing","state","setState","value","setValue","toggleEditing","type","name","onChange","max","target","onBlur","isNaN","length","Math","abs","onFocus","readOnly","START_BLOCK","DEX_ABI","require","abi","ModalTitle","p","TokenInfoParent","TokenInfoHorizontal","TokenInfoVertical","SideButton","TypeButton","ControlButton","TokenLabel","TokenBalance","OrderModal","defaultOrderState","side","amount","price","valid","balances","base","paired","market","buy","sell","order","setOrder","color","text","message","txState","setTxState","appstate","baseToken","pairedToken","getBalances","a","dexcontract","methods","ticker","call","baseTokenBalance","pairedTokenBalance","getMarket","buyMarket","sellMarket","getMarketPrice","prevOrder","catch","err","console","error","show","disableSubmit","baseTokenSymbol","symbol","baseTokenDecimals","toString","baseTokenQuantity","pairedTokenSymbol","pairedTokenDecimals","pricePerToken","calculatedPairedTokenValue","BigInt","Modal","contentClassName","closeButton","id","as","Body","className","Object","keys","pairedTokenQuantity","Footer","Contract","_address","createOrder","send","from","txHash","onHide","ConnectionMessageModal","handleClose","TokenErrorModal","OrderCancelModal","handleConfirmedAction","FundsModal","theme","maxValue","params","action","confirm","wallet","dex","spinner","setSpinner","setAmount","v","handleConfirmed","MAIN_DIV","TOKEN_DIV","BaseTokenDropdownToggle","Dropdown","Toggle","PairedTokenDropdownToggle","TradeTokensButton","TokenPicker","showConnectionMessageModal","setShowConnectionMessageModal","currentBaseTokenDisplayName","handleBaseTokenItemClick","handleBaseTokenChange","currentTarget","dataset","address","baseTokenMenuItems","tokens","map","token","Item","currentPairedTokenDisplayName","isDisabled","handlePairedTokenItemClick","handlePairedTokenChange","pairedTokenMenuItems","pairedTokenSet","pairLabelValue","pairLabelColor","Menu","tradeEnabled","showOrderModal","fontSize","fontWeight","handleShow","GrandParentContainer","ParentContainer","RowPanelBase","RowPanel","ColumnPanel","ChartDiv","Chart","OrderbookDiv","OrderbookAwaitDiv","SidesDiv","BuySideDiv","SellSideDiv","SpreadDiv","buyRowStyle","padding","sellRowStyle","headerStyle","textAlign","tableStyle","marginBottom","Orderbook","orderbook","setOrderbook","buyOrders","orderBook","sellOrders","reverse","spread","Table","striped","hover","borderless","role","OrderTab","TabButton","button","OrdersDiv","OrdersAwaitDiv","CancelOrderButton","ScrollableTable","ordersRowStyle","ordersHeaderStyle","Orders","activeOrders","setActiveOrders","completedOrders","setCompletedOrders","showCompleted","setShowCompleted","showOrderCancelModal","setShowOrderCancelModal","currentOrder","setCurrentOrder","orderHistory","activeOrderList","completedOrderList","oid","tickerFrom","orderType","tickerTo","complete","trader","filled","push","sort","b","handleConfirmedOrderCancel","useCallback","dexContract","cancelOrder","completedOrderTableView","activeOrderTableView","handleOrderCancel","buttonTitle","DexTradeInfo","FOOTER","AppStatusBar","blockNumberString","networkConfig","web3Networks","find","network","undefined","statusBarString","ERC20_ABI","Panel","ActionButton","DepositButton","WithdrawButton","MintButton","BurnButton","rowStyle","verticalAlign","TokenList","setTokens","showModal","setShowModal","modalParams","setModalParams","showErrorModal","setShowErrorModal","errorText","setErrorText","getWalletBalance","web3Client","baseTokenContract","balanceOf","getDexBalance","updateBalances","tokenListPromise","Promise","all","tokenList","handleDeposit","handleWithdrawal","handleMint","handleBurn","erc20","approve","mint","burn","rows","TextDiv","Description","Welcome","fgColor","url","defaultAppState","defaultMetamaskState","PageContainer","Background","App","setRpcProvider","setMetamask","setDexContract","setAppState","orderModalShow","setOrderModalShow","setOrderBook","setOrderHistory","isInitialConnect","_isInitialConnect","metamaskRpcProvider","isConnected","request","method","selectedAddress","accounts","defaultWeb3Network","on","newAccounts","newChainId","reload","componentWillMount","bRes","log","updateOrderBook","getOrderBook","prevOrderBook","initNetwork","net","getId","netId","getChainId","subscription","subscribe","result","subscriptionId","blockHeader","number","blockHeadSubscription","unsubscribe","success","initContract","dexBuildObject","networks","hasOwnProperty","initApp","getTokens","contract","getTokenList","filter","i","tokenAddress","utils","toUtf8","getBlockNumber","currentBlock","getPairedTokens","pairPromises","item","pos","arr","pairs","isValid","subscriptions","OrderCreated","OrderFilled","OrderRemoved","processPastEvents","getPastEvents","fromBlock","toBlock","evtOrderCreated","evtOrderFilled","evtOrderRemoved","orderHashTable","returnValues","reduce","obj","forEach","toBN","lt","events","event","prevOrderHistory","newOrderHistory","receipt","eventName","exact","path","to","newBaseToken","newPairedToken","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5433f218.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Web3 from 'web3'\n\nexport const formatPrice = (quantity, decimals) => {\n    return new Intl.NumberFormat('en-EN', {minimumFractionDigits: 9,}).format(quantity / 10 ** decimals)\n}\n\nexport const formatPriceUI = (quantity, decimals) => {\n    return new Intl.NumberFormat('en-EN', {maximumSignificantDigits: 9, }).format(quantity / 10 ** decimals)\n}\n\nexport const formatPrice2 = (quantity) => {\n    return new Intl.NumberFormat('en-EN', {maximumSignificantDigits: 9, }).format(quantity)\n}\n\nexport const formatEthAmount = (quantity) => {\n    return new Intl.NumberFormat('en-EN', {maximumSignificantDigits: 2, maximumFractionDigits: 2}).format(quantity)\n}","import Web3 from 'web3'\n\nimport logo from '../logo.svg'\nimport styled from 'styled-components'\nimport { Button, Spinner } from 'react-bootstrap'\nimport { useEffect, useState } from 'react'\nimport { formatEthAmount } from '../utils/utils'\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\n\ndeclare const window: any;\n\nconst Img = styled.img`\n  height: 4rem;\n  pointer-events: none;\n  \n  @media (prefers-reduced-motion: no-preference) {\n    animation: App-logo-spin infinite 20s linear;\n  }\n  \n  @keyframes App-logo-spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nconst Header = styled.header`\n  min-height: 10vh;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst Title = styled.h1`\n  font-size: 2rem;\n  font-weight: bold;\n`\n\nconst Logo = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  color: white;\n  width: 280px;\n`\n\nconst PageButton = styled(Button)`\n  width: 200px;\n`\n\nconst JazzTitle = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`\n\nconst BalanceButtonBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: .25rem;\n  font-weight: bold;\n  color: #999;\n  width: 280px;\n`\nconst BalanceBlock = styled.div`\n  width: 80px;\n  display: flex:\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nfunction ConnectButton(props) {\n\n  interface IConnectButtonState {\n    title: any,\n    variant: string\n    pending: boolean\n  }\n\n  /**\n   * @dev Compose new button state\n   */\n  function makeNewState() : IConnectButtonState {\n\n    if(!props.rpcProvider) {\n      return {\n        title: <Spinner animation=\"border\" variant='secondary' size='sm' />,\n        variant: 'warning',\n        pending: false\n      }\n    }\n\n    if(!props.metamask.provider) {\n      return {\n        title: 'Install Metamask',\n        variant: 'warning',\n        pending: false\n      }\n    }\n\n    let title;\n    let variant;\n    \n    // eslint-disable-next-line eqeqeq\n    if (props.metamask.provider.chainId != props.rpcProvider.chainId) {\n      // Wrong network\n      title = 'Wrong Network'\n      variant = 'danger'\n    }\n    else if (props.metamask.currentAccount) {\n      // Connected\n      title = <JazzTitle>\n        {<Jazzicon diameter={24} seed={jsNumberForAddress(props.metamask.currentAccount)} />} \n        <label style={{ marginLeft : '5px' }}>{props.metamask.currentAccount.slice(0,6) + '...' + props.metamask.currentAccount.slice(-4)}</label>\n        </JazzTitle>\n      variant = 'primary'\n    }\n    else {\n      // Connect Wallet\n      title = 'Connect Wallet'\n      variant = 'warning'\n    }\n\n    return {\n      title: title,\n      variant: variant,\n      pending: false\n    }\n  }\n\n  const [buttonState, setButtonState] = useState<IConnectButtonState>(() => {return makeNewState()})\n\n  const handleButtonClick = () => {\n    // Check if Metamask is not installed\n    if (typeof window.ethereum !== 'undefined') {\n      props.connectMetamask(true)\n      if (!props.metamask.currentAccount) {\n        setButtonState((prevState) => {\n          return {\n            ...prevState,\n            title: <Spinner animation=\"border\" variant='secondary' size='sm'/>,\n            pending: true\n          }\n        })\n      }\n    } \n    else {\n      window.open('https://metamask.io/', '_blank').focus();\n    }\n  }\n\n  useEffect(() => {\n\n    setButtonState(() => {return makeNewState()})\n  \n  },[props.rpcProvider, props.metamask.provider])\n  \n  return (\n    <Button\n      style={{ width: \"200px\", marginRight: '0px' }}\n      variant={buttonState.variant} \n      hidden={props.pageId === 0}\n      disabled={buttonState.pending}\n      onClick={handleButtonClick}>\n        {buttonState.title}\n    </Button>\n  )\n}\n\n\nexport default function AppHeader(props) {\n\n  const hrefOptions = {\n    0: {title: 'Click to Start', href: '#/trade'},\n    1: {title: 'Token List', href: '#/tokens'},\n    2: {title: 'Trade Tokens', href: '#/trade'}\n  }\n\n  const handlePageButtonClick = (e, href) => {\n    document.location.href = href;\n  }\n\n  const [balance, setBalance] = useState(parseFloat(props.metamask.balance) / (10 ** 18))\n  useEffect(() => {\n\n    if (!props.metamask.provider || !props.metamask.currentAccount) {\n      return\n    }\n    \n    const timer = setTimeout(() => {\n      const web3Client = new Web3(props.metamask.provider)\n      web3Client.eth.getBalance(props.metamask.currentAccount)\n      .then(bal => {\n        setBalance(parseFloat(bal) / (10 ** 18))\n      })\n    }, 1000);\n    return () => clearTimeout(timer);\n\n  }, [props.appState.blockNumber, props.metamask.provider, props.metamask.currentAccount])\n\n  let balanceString = 'ETH: '\n  let balanceBackground = 'rgba(0,0,0,0.6)'\n  if (balance > 0 && balance < 0.1) {\n    balanceString += '<0.1'\n  } \n  else if (balance > 99) {\n    balanceString += '99+'\n  }\n  else {\n    balanceString += formatEthAmount(balance)\n  } \n  \n  if (!props.metamask.currentAccount) {\n    balanceString = ''\n    balanceBackground = 'rgba(0,0,0,0.0)'\n  }\n\n  return (\n    <Header>\n      <Logo>\n        <Img src={logo} alt=\"logo\" />\n        <Title>\n          {props.title}\n        </Title>\n      </Logo>\n      <PageButton \n        variant=\"info\" \n        onClick={(e) => handlePageButtonClick(e, hrefOptions[props.pageId].href)}>\n          {hrefOptions[props.pageId].title}\n      </PageButton>\n      <BalanceButtonBlock style={{backgroundColor: balanceBackground}}>\n        <BalanceBlock hidden={props.pageId === 0}>{balanceString}</BalanceBlock>\n        <ConnectButton pageId={props.pageId} metamask={props.metamask} rpcProvider={props.rpcProvider} connectMetamask={props.connectMetamask}/>\n      </BalanceButtonBlock>\n    </Header>\n  )\n}","export const ORDER_SIDE = {\n    0: 'Buy',\n    1: 'Sell'\n}\n\nexport const ORDER_TYPE = {\n    0: 'Market',\n    1: 'Limit',\n    2: 'IoC',\n    3: 'FoK',\n    4: 'MoC'\n}","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport { useCallback, useEffect, useState } from 'react'\nimport { formatPriceUI, formatPrice2 } from '../../utils/utils'\nimport styled from 'styled-components'\n\nconst Input = styled.input`\n  text-align: end;\n  background-color: rgba(255,255,255,0.1);\n  color: #ccc;\n  border: none;\n  &:focus-visible {\n    outline: none\n  }\n`\n\nexport default function TokenInput(props) {\n\n    const [state, setState] = useState({isEditing: false})\n    const [value, setValue] = useState(props.value)\n\n    const toggleEditing = () => {\n        setState(({isEditing}) => ({isEditing: !isEditing}) )\n    }\n\n    // Update on change within the text field\n    const handleInputChange = (e) => {\n      if (props.max && parseFloat(e.target.value) > parseFloat(props.max)) {\n        setValue(() => props.max)\n        return\n      }\n      setValue(() => e.target.value)  \n    } \n\n    // Update on `props.value` change\n    useEffect(() => {\n      setValue(() => props.value)\n    }, [props.value])\n\n    return (\n        state.isEditing ? (\n          <Input\n            type=\"number\"\n            name={props.name}\n            value={value}\n            onChange={handleInputChange}\n            onBlur={() => {\n              if (isNaN(value) || value.length === 0) {\n                props.onChange(0)\n              }\n              else {\n                props.onChange(Math.abs(value))\n              }\n              toggleEditing()\n            }}\n          />\n        ) : (\n          <Input\n            type=\"text\"\n            name={props.name}\n            value={formatPrice2(value)}\n            onFocus={toggleEditing}\n            readOnly\n          />\n        )\n    )\n}\n\nTokenInput.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.string,\n    max: PropTypes.string,\n    decimals: PropTypes.string,\n    onChange: PropTypes.func\n};","export const BUY = 0\nexport const SELL = 1\n\nexport const MARKET = 0\nexport const LIMIT = 1\nexport const IOC = 2\nexport const FOK = 3\nexport const MOC = 4\n\nexport const WITHDRAW = 0\nexport const DEPOSIT = 1\nexport const MINT = 2\nexport const BURN = 3\n\nexport const START_BLOCK = 28731619","import styled from 'styled-components'\nimport { Modal, Container, Row, Col, Button, Dropdown, Form, Spinner } from 'react-bootstrap'\nimport { useCallback, useEffect, useState } from 'react'\nimport { ORDER_SIDE, ORDER_TYPE } from '../utils/enums'\nimport { formatPriceUI, formatPrice2 } from '../utils/utils'\nimport Web3 from 'web3'\nimport { Contract } from 'web3-eth-contract'\n\nimport './Modals.css'\nimport TokenInput from './extra/TokenInput'\nimport {BUY, SELL, MARKET, LIMIT, IOC, FOK, MOC } from '../utils/constants'\nimport { WITHDRAW, DEPOSIT, MINT, BURN } from '../utils/constants'\n\nconst ERC20_ABI = require('../../src/artifacts/TestToken.json').abi\nconst DEX_ABI = require('../../src/artifacts/Dex.json').abi\n\nconst ModalTitle = styled.p`\n  font-size: 1rem;\n  font-weight: bold;\n`\nconst TokenInfoParent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\nconst TokenInfoHorizontal = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-top: 5px;\n`\nconst TokenInfoVertical = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\nconst SideButton = styled(Button)`\n  width: 100%;\n  border-radius: 0px .25rem .25rem 0px;\n  margin-left: 0px;\n  &:focus {\n    box-shadow: none;\n  } \n`\nconst TypeButton = styled(Button)`\n  width: 100%;\n  border-radius: .25rem 0px 0px .25rem;\n  margin-right: 0px;\n  &:focus {\n    box-shadow: none;\n  } \n`\nconst ControlButton = styled(Button)`\n  width: 25%;\n`\nconst TokenLabel = styled.div`\n  width: 100px;\n`\nconst TokenBalance = styled.div`\n  width: 140px;\n  margin-left: 5px;\n`\n\nexport function OrderModal(props) {\n\n  const TX_NO = 0\n  const TX_PENDING = 1\n  const TX_SENT = 2\n\n  const defaultOrderState = {\n    side: BUY,\n    type: LIMIT,\n    amount: '0',\n    price: '0',\n    valid: false,\n    balances: {base:'0', paired:'0'},\n    market: {buy: '0', sell: '0'}\n  }\n\n  const [order, setOrder] = useState<any>(defaultOrderState)\n  const [message, setMessage] = useState<any>({\n    disabled: true,\n    color: '#000',\n    text: 'Dummy'\n  })\n  const [txState, setTxState] = useState<any>(TX_NO)\n\n  /**\n   * Update token balances and market prices\n   */\n  useEffect(() => {\n\n    if(!props.appstate.baseToken || !props.appstate.pairedToken || !props.metamask.currentAccount) {\n      return\n    }\n\n    const getBalances = async () => {\n      \n      const baseTokenBalance = await props.dexcontract.methods.balances(props.metamask.currentAccount, props.appstate.baseToken.ticker).call()\n      const pairedTokenBalance = await props.dexcontract.methods.balances(props.metamask.currentAccount, props.appstate.pairedToken.ticker).call()\n\n      return {base: baseTokenBalance, paired: pairedTokenBalance}\n    }\n\n    const getMarket = async () => {\n\n      let buyMarket = order.market.buy\n      let sellMarket = order.market.sell\n      try {\n        buyMarket = await props.dexcontract.methods.getMarketPrice(SELL, props.appstate.baseToken.ticker, props.appstate.pairedToken.ticker).call()\n      } catch (e) {}\n      try {\n        sellMarket = await props.dexcontract.methods.getMarketPrice(BUY, props.appstate.baseToken.ticker, props.appstate.pairedToken.ticker).call()\n      } catch (e) {}\n\n      return {buy: buyMarket, sell: sellMarket}\n    }\n\n    getBalances()\n    .then((balances) => {\n      setOrder((prevOrder) => ({...prevOrder, balances: balances}))\n    })\n    .catch((err) => console.error(err))\n    getMarket().then((market) => {\n      setOrder((prevOrder) => ({...prevOrder, market: market}))\n    })\n    .catch((err) => console.error(err))\n\n\n  }, [props.metamask.currentAccount, props.appstate.baseToken, props.appstate.pairedToken, props.show])\n\n  useEffect(() => {\n    setOrder(() => ({...defaultOrderState, amount: '0', price: '0'}))\n  }, [props.appstate.baseToken, props.appstate.pairedToken])\n\n  // Update the price based on the current order side\n  useEffect(() => {\n    setOrder((prevOrder) => ({...prevOrder, price: prevOrder.side === SELL ? prevOrder.market.sell : prevOrder.market.buy}))\n  }, [order.side, order.market])\n\n  const disableSubmit = order.type === 0 && ((order.side === 0 && order.market.buy === '0') || (order.side === 1 && order.market.sell === '0'))\n  \n  const baseTokenSymbol = props.appstate.baseToken ? props.appstate.baseToken.symbol : ''\n  const baseTokenDecimals = props.appstate.baseToken ? props.appstate.baseToken.decimals : '1'\n  const baseTokenBalance = (order.balances.base / 10 ** baseTokenDecimals).toString()\n  const baseTokenQuantity = (order.amount / 10 ** baseTokenDecimals).toString()\n\n  const pairedTokenSymbol = props.appstate.pairedToken ? props.appstate.pairedToken.symbol : ''\n  const pairedTokenDecimals = props.appstate.pairedToken ? props.appstate.pairedToken.decimals : '1'\n  const pairedTokenBalance = (order.balances.paired / 10 ** pairedTokenDecimals).toString()\n\n  const pricePerToken = (order.price / 10 ** pairedTokenDecimals).toString()\n\n  // Calculate the total amount of paired tokens required to make a trade\n  const a = parseFloat((BigInt(order.amount) * BigInt(order.price) / BigInt(10 ** baseTokenDecimals)).toString())\n  const calculatedPairedTokenValue = (a / 10 ** pairedTokenDecimals).toString()\n\n  // Handler for order side change\n  const changeSide = () => {\n    setOrder((prevOrder) => ({...prevOrder, side: (prevOrder.side + 1) % Object.keys(ORDER_SIDE).length}))\n  }\n  // Handler for order type change\n  const changeType = () => {\n    setOrder((prevOrder) => ({...prevOrder, type: (prevOrder.type + 1) % Object.keys(ORDER_TYPE).length}))\n  }\n  // Handler for base token quantity change. Changes the `order.amount` directly\n  const changeBaseQuantity = (baseTokenQuantity) => {\n    setOrder((prevOrder) => ({\n      ...prevOrder, \n      amount: (BigInt(parseFloat(baseTokenQuantity) * 10 ** baseTokenDecimals)).toString()\n    }))\n  }\n  // Handler for base token quantity change. Changes the `order.amount` by calculating the amount base on the paired token and price\n  const changePairedQuantity = (pairedTokenQuantity) => {\n    if (order.price == 0) {\n      return\n    }\n    setOrder((prevOrder) => ({\n      ...prevOrder, \n      amount: (BigInt(parseFloat(pairedTokenQuantity) * 10 ** pairedTokenDecimals) * BigInt(10 ** baseTokenDecimals) / BigInt(order.price)).toString()\n    }))\n  }\n  // Handler for price per token change\n  const changeXchgRate = (pricePerToken) => {\n    setOrder((prevOrder) => ({\n      ...prevOrder, \n      price: (BigInt(parseFloat(pricePerToken) * 10 ** pairedTokenDecimals)).toString()\n    }))\n  }\n  // Send tx handler\n  const sendTx = () => {\n\n    setTxState(() => TX_PENDING)\n    const web3Client = new Web3(props.metamask.provider)\n    const dex = new web3Client.eth.Contract(DEX_ABI, props.dexcontract._address)\n\n    // Create order\n    dex.methods.createOrder(order.side, order.type, props.appstate.baseToken.ticker, props.appstate.pairedToken.ticker, order.price, order.amount).send({from: props.metamask.currentAccount})\n    .then((txHash) => {\n      setTxState(() => TX_NO)\n    })\n    .catch((error) => {\n      setTxState(() => TX_NO)\n    })\n  }\n\n  return (\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" contentClassName='ModalDark' animation={false}>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\" as={ModalTitle}>\n          Create Order\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"show-grid\">\n        <TokenInfoParent>\n          <TokenInfoVertical>\n            <TokenInfoHorizontal>\n              <TypeButton variant='secondary' onClick={changeType}>{ORDER_TYPE[order.type]}</TypeButton>\n              <SideButton variant={order.side === BUY ? 'info' : 'danger'} onClick={changeSide}>{ORDER_SIDE[order.side]}</SideButton>\n            </TokenInfoHorizontal>\n            <TokenInfoHorizontal>\n              <TokenLabel>{baseTokenSymbol}</TokenLabel>\n              <TokenInput \n              name='baseToken' \n              value={baseTokenQuantity}\n              decimals={baseTokenDecimals} \n              max={baseTokenBalance}\n              onChange={changeBaseQuantity}\n              />\n              <TokenBalance>{` / ${formatPrice2(baseTokenBalance)}`}</TokenBalance>\n            </TokenInfoHorizontal>\n            <TokenInfoHorizontal>\n              <TokenLabel>{pairedTokenSymbol}</TokenLabel>\n              <TokenInput \n              name='pairedToken' \n              value={calculatedPairedTokenValue}\n              decimals={pairedTokenDecimals}\n              max={pairedTokenBalance}\n              onChange={changePairedQuantity}\n              />\n              <TokenBalance>{` / ${formatPrice2(pairedTokenBalance)}`}</TokenBalance>\n            </TokenInfoHorizontal>\n            <TokenInfoHorizontal>\n              <div>Exchange Rate</div>\n            </TokenInfoHorizontal>\n            <TokenInfoHorizontal>\n              <div>{`${baseTokenSymbol} / ${pairedTokenSymbol}`}</div>\n              <TokenInput \n              name='pricePerToken'\n              value={pricePerToken}\n              decimals={pairedTokenDecimals} \n              onChange={changeXchgRate}\n              />\n            </TokenInfoHorizontal>\n          </TokenInfoVertical>\n          <TokenInfoVertical>\n          <TokenInfoHorizontal hidden={message.disabled} style={{color: message.color}}>\n              {message.text}\n            </TokenInfoHorizontal>\n          </TokenInfoVertical>\n        </TokenInfoParent>\n      </Modal.Body>\n      <Modal.Footer>\n        <ControlButton variant='warning' onClick={sendTx} disabled={disableSubmit}>{txState === TX_PENDING ? <Spinner animation=\"border\" variant='secondary' size='sm'/> : 'Submit'}</ControlButton>\n        <ControlButton variant='secondary' onClick={props.onHide}>Close</ControlButton>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport function ConnectionMessageModal(props) {\n  return (\n      <Modal show={props.show} onHide={props.handleClose} size='sm' contentClassName='ModalDark'>\n        <Modal.Header closeButton>\n          <Modal.Title as={ModalTitle}>Wrong Network</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Please connect to the correct network</Modal.Body>\n      </Modal>\n  )\n}\n\nexport function TokenErrorModal(props) {\n  return (\n      <Modal show={props.show} onHide={props.handleClose} size='sm' contentClassName='ModalDark'>\n        <Modal.Header closeButton>\n          <Modal.Title as={ModalTitle}>Error</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{props.text}</Modal.Body>\n      </Modal>\n  )\n}\n\nexport function OrderCancelModal(props) {\n\n  const text = !props.order ? '' : `Order ${props.order.id} will be flagged as cancelled. The order will remain in the active orders until it reaches the top of the order book where it will be popped off without being executed`\n\n  return (\n      <Modal show={props.show} onHide={props.handleClose} contentClassName='ModalDark'>\n        <Modal.Header closeButton>\n          <Modal.Title as={ModalTitle}>Cancel Order</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{text}</Modal.Body>\n        <Modal.Footer>\n          <ControlButton variant=\"secondary\" onClick={props.handleClose}>Back</ControlButton>\n          <ControlButton variant=\"primary\" onClick={props.handleConfirmedAction}>Confirm</ControlButton>\n        </Modal.Footer>\n      </Modal>\n  )\n}\n\nexport function FundsModal(props) {\n\n  let theme, maxValue\n  switch(props.params.action) {\n    case DEPOSIT:\n      theme = {title: 'Deposit Funds to Dex', variant: 'info', confirm: 'Deposit'} \n      maxValue = props.params.balance.wallet\n      break\n    case WITHDRAW:\n      theme = {title: 'Withdraw Funds from Dex', variant: 'danger', confirm: 'Withdraw'}\n      maxValue = props.params.balance.dex\n      break\n    case MINT:\n      theme = {title: 'Mint ERC20 tokens', variant: 'info', confirm: 'Mint'} \n      maxValue = '1000000'\n      break\n    case BURN:\n      theme = {title: 'Burn ERC20 Tokens', variant: 'danger', confirm: 'Burn'}\n      maxValue = props.params.balance.wallet\n      break\n    default:\n      console.error(\"Wrong action parameter\");\n  }\n  \n\n  const [spinner, setSpinner] = useState(false)\n  const [amount, setAmount] = useState('0')\n\n  return (\n      <Modal show={props.show} onHide={props.handleClose} contentClassName='ModalDark'>\n        <Modal.Header closeButton>\n          <Modal.Title as={ModalTitle}>{theme.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <TokenInfoHorizontal>\n            {`Enter ${props.params.symbol} amount:`}\n          </TokenInfoHorizontal>\n          <TokenInfoHorizontal>\n            <TokenInput \n            name='amount'\n            value=''\n            max={maxValue}\n            decimals={props.params.decimals} \n            onChange={(v) => (setAmount(() => (BigInt(v) * BigInt(10 ** props.params.decimals)).toString()))}\n            />\n          </TokenInfoHorizontal>\n        </Modal.Body>\n        <Modal.Footer>\n          <ControlButton variant=\"secondary\" onClick={props.handleClose}>Back</ControlButton>\n          <ControlButton variant={theme.variant} onClick={() => {\n            setSpinner(() => true)\n            props.handleConfirmed({...props.params, amount: amount})\n            .then(() => setSpinner(false))\n            .catch(error => console.error(error))\n            props.handleClose()\n          }}>\n            {spinner ? <Spinner animation=\"border\" variant='secondary' size='sm'/>  : theme.confirm}\n          </ControlButton>\n        </Modal.Footer>\n      </Modal>\n  )\n}  ","import styled from 'styled-components'\nimport { Dropdown, Button } from 'react-bootstrap'\nimport React, {useState, useEffect, useCallback} from 'react'\nimport { ConnectionMessageModal } from './Modals'\n\nconst MAIN_DIV = styled.div`\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n`\n\nconst TOKEN_DIV = styled.div`\n    display:flex;\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: flex-start;\n`\n\nconst BaseTokenDropdownToggle = styled(Dropdown.Toggle)`\n    border-top-left-radius: .25rem;\n    border-top-right-radius: 0%;\n    border-bottom-right-radius: 0%;\n    border-bottom-left-radius: .25rem;\n    min-width: 100px;\n`\nconst PairedTokenDropdownToggle = styled(Dropdown.Toggle)`\n    border-top-left-radius: 0%;\n    border-top-right-radius: .25rem;\n    border-bottom-right-radius: .25rem;\n    border-bottom-left-radius: 0%;\n    min-width: 100px;\n`\nconst TradeTokensButton = styled(Button)`\n    border-radius: 0%; \n    margin: 10px, 0px, 10px, 0px;\n`\n\nexport default function TokenPicker(props) {\n\n    // connectMessageModal handling\n    const [showConnectionMessageModal, setShowConnectionMessageModal] = useState(false);\n  \n    \n    // Base Token\n    const currentBaseTokenDisplayName = props.appState.baseToken ? props.appState.baseToken.symbol: ''\n\n    const handleBaseTokenItemClick = (e) => {\n        props.handleBaseTokenChange( {\n            ticker: e.currentTarget.dataset.ticker, \n            symbol: e.currentTarget.dataset.symbol, \n            address: e.currentTarget.dataset.address,\n            decimals: e.currentTarget.dataset.decimals\n        })\n    }\n\n    const baseTokenMenuItems = props.appState.tokens.map((token) => {\n        return (\n            <Dropdown.Item \n            key={token.ticker} \n            onClick={handleBaseTokenItemClick} \n            data-ticker={token.ticker} \n            data-symbol={token.symbol}\n            data-address={token.address}\n            data-decimals={token.decimals}>\n                {token.symbol}\n            </Dropdown.Item>\n        )\n    })\n\n    // Paired Token\n    const currentPairedTokenDisplayName = props.appState.pairedToken ? props.appState.pairedToken.symbol: 'None'\n    const isDisabled = props.appState.pairedToken ? false: true\n\n    const handlePairedTokenItemClick = (e) => {\n        props.handlePairedTokenChange( {\n            ticker: e.currentTarget.dataset.ticker, \n            symbol: e.currentTarget.dataset.symbol, \n            address: e.currentTarget.dataset.address,\n            decimals: e.currentTarget.dataset.decimals\n        })\n    }\n\n    const pairedTokenMenuItems = props.appState.pairedTokenSet.map((token) => {\n        return (\n            <Dropdown.Item \n            key={token.ticker} \n            onClick={handlePairedTokenItemClick}\n            data-ticker={token.ticker} \n            data-symbol={token.symbol}\n            data-address={token.address}\n            data-decimals={token.decimals}>\n                {token.symbol}\n            </Dropdown.Item>\n        )\n    })\n\n    const handleTradeTokensButtonClick = (e) => {\n        props.appState.tradeEnabled ? props.showOrderModal() : setShowConnectionMessageModal(true)\n    }\n\n    // Pair label\n    const pairLabelValue = props.appState.pairedToken \n    ? props.appState.baseToken.symbol+'/'+props.appState.pairedToken.symbol\n    : 'No Trading Pair'\n    const pairLabelColor = props.appState.pairedToken ? '#4bff52' : 'grey'\n\n    return (\n        <MAIN_DIV>\n        <TOKEN_DIV>\n            <Dropdown>\n            <BaseTokenDropdownToggle variant=\"primary\">\n                {currentBaseTokenDisplayName}\n            </BaseTokenDropdownToggle>\n            <Dropdown.Menu>\n               {baseTokenMenuItems}\n            </Dropdown.Menu>\n            </Dropdown>\n\n            <TradeTokensButton \n            variant=\"primary\" \n            hidden={isDisabled}\n            onClick={handleTradeTokensButtonClick}>\n                <i className=\"fas fa-sync-alt\"></i>\n            </TradeTokensButton>{' '}\n\n            <Dropdown>\n            <PairedTokenDropdownToggle variant=\"primary\" disabled={isDisabled}>\n                {currentPairedTokenDisplayName}\n            </PairedTokenDropdownToggle>\n            <Dropdown.Menu>\n               {pairedTokenMenuItems}\n            </Dropdown.Menu>\n            </Dropdown>\n        </TOKEN_DIV>\n            <p style={{fontSize: '0.9rem', fontWeight: 'bold', color: pairLabelColor}}>{pairLabelValue}</p>\n            <ConnectionMessageModal \n                show={showConnectionMessageModal} \n                handleShow={() => setShowConnectionMessageModal(true)} \n                handleClose={() => setShowConnectionMessageModal(false)} \n            />\n        </MAIN_DIV>\n    )\n}\n","import styled from 'styled-components'\nimport { useState, useEffect, useCallback } from 'react'\nimport { Table, Spinner, Button } from 'react-bootstrap'\nimport { ORDER_SIDE, ORDER_TYPE } from '../utils/enums'\nimport { formatPrice, } from '../utils/utils'\nimport { OrderCancelModal } from './Modals'\n\n// Generic styles for the page\nconst GrandParentContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n`\n\nconst ParentContainer = styled.div`\n    width: 1200px;\n    min-width: 1000px;\n`\nconst RowPanelBase = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: start;\n    margin-bottom: 10px;\n`\nconst RowPanel = styled.div`\n    background:rgba(0, 0, 0,0.6);\n    height: 37vh;\n    border-radius: 10px;\n    text-align: left;\n`\nconst ColumnPanel = styled(RowPanel)`\n    width: 50%;\n`\nconst Title = styled.p`\n    font-weight: bold;\n    color: #fff;\n    font-size: 0.85rem;\n    margin: 5px 10px;\n`\n\n// Chart panel\nconst ChartDiv = styled(ColumnPanel)`\n    margin-right: 5px;\n`\nfunction Chart(props) {\n    return (\n        <ChartDiv><Title>Chart</Title></ChartDiv>\n    )\n}\n\n// Orderbook panel\nconst OrderbookDiv = styled(ColumnPanel)`\n    margin-left: 5px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n`\nconst OrderbookAwaitDiv = styled(ColumnPanel)`\n    margin-left: 5px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\nconst SidesDiv = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    height: 100%;\n`\nconst BuySideDiv = styled.div`\n    overflow-y: scroll;\n    width: 100%;\n    display: flex;\n    flex-direction: column-reverse;\n    background-color: rgba(0,0,255,0.2);\n    height: 47%;\n`\nconst SellSideDiv = styled.div`\n    overflow-y: scroll;\n    width: 100%;\n    border-radius: 0 0 10px 10px;\n    background-color: rgba(255,0,0,0.2);\n    padding-bottom: .5rem;\n    height: 47%;\n`\nconst SpreadDiv = styled.div`\n    font-size: 0.75rem;\n    margin-bottom: 0px;\n    padding: 0 .5rem;\n    width: 100%;\n    background-color: rgba(255,0,255,0.1);\n`\nconst buyRowStyle = {\n    padding: '0 .5rem',\n    width: '50%',\n}\nconst sellRowStyle = {\n    padding: '0 .5rem',\n    width: '50%',\n}\nconst headerStyle = {\n    padding: '0 .5rem',\n    width: '50%',\n    textAlign: 'center' as const\n}\nconst tableStyle = {\n    fontSize: '0.75rem',\n    marginBottom: '0px'\n}\n\nexport interface IOrderBookDisplay {\n    buy: any[],\n    sell: any[],\n    spread: string\n}\n\nfunction Orderbook(props) {\n\n    const [orderbook, setOrderbook] = useState<IOrderBookDisplay | null>(null)\n\n    useEffect(() => {\n        //debugger\n        if (!props.appState.baseToken || !props.appState.pairedToken) {\n            //setOrderbook(() => ({buy: [], sell: [], spread: ''}))\n            setOrderbook(() => (null))\n            return\n        }\n\n        const buyOrders = props.orderBook.buy.map(({id, price, amount}) => {\n            return (\n                <tr key={id}>\n                    <td style={buyRowStyle}>{formatPrice(price, props.appState.pairedToken.decimals)}</td>\n                    <td style={buyRowStyle}>{formatPrice(amount, props.appState.baseToken.decimals)}</td>\n                </tr>\n            )\n        })\n        const sellOrders = props.orderBook.sell.map(({id, price, amount}) => {\n            return (\n                <tr key={id}>\n                    <td style={sellRowStyle}>{formatPrice(price, props.appState.pairedToken.decimals)}</td>\n                    <td style={sellRowStyle}>{formatPrice(amount, props.appState.baseToken.decimals)}</td>\n                </tr>\n            )\n        }).reverse()\n\n        const spread = props.orderBook.buy.length > 0 && props.orderBook.sell.length > 0 \n        ? Math.abs(props.orderBook.buy.slice(-1)[0].price - props.orderBook.sell.slice(-1)[0].price) : 0\n\n        setOrderbook(() => {\n            return {\n                buy: buyOrders,\n                sell: sellOrders,\n                spread: formatPrice(spread, props.appState.pairedToken.decimals)\n            }\n        })\n\n    }, [props.orderBook])\n\n    return (\n        !orderbook \n        ? \n        <OrderbookAwaitDiv>\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>\n        </OrderbookAwaitDiv>\n        : orderbook.buy.length === 0 && orderbook.sell.length === 0\n        ?\n        <OrderbookAwaitDiv>\n            <p>No orders found</p>\n        </OrderbookAwaitDiv>    \n        :\n        <OrderbookDiv>\n            <Table striped hover style={tableStyle}>\n                <thead>\n                    <tr>\n                        <th style={headerStyle}>Price</th>\n                        <th style={headerStyle}>Quantity</th>\n                    </tr>\n                </thead>\n            </Table>\n            <SidesDiv>\n                <BuySideDiv>\n                    <Table striped borderless hover style={tableStyle}>\n                        <tbody>\n                            {orderbook.buy}\n                        </tbody>\n                    </Table>\n                </BuySideDiv>\n                <SpreadDiv>Spread of {!props.appState.pairedToken ? '' :`${props.appState.pairedToken.symbol ? props.appState.pairedToken.symbol : ''} ${orderbook.spread}`}</SpreadDiv>\n                <SellSideDiv>\n                    <Table striped borderless hover style={tableStyle}>\n                        <tbody>\n                            {orderbook.sell}\n                        </tbody>\n                    </Table>\n                </SellSideDiv>\n            </SidesDiv>\n        </OrderbookDiv>\n    )\n}\n\n// Orders panel\nconst OrderTab = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n`\nconst TabButton = styled.button`\n    background-color: rgba(0,0,0,0);\n    border-style: none;\n    border-radius: 10px;\n`\nconst OrdersDiv = styled(RowPanel)`\n    width: 100%;\n`\nconst OrdersAwaitDiv = styled(RowPanel)`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n`\nconst CancelOrderButton = styled.button`\n    height: 18px;\n    width: 18px;\n    color: #fff;\n    background-color: rgba(0,0,0,0);\n    border: none;\n`\nconst ScrollableTable = styled.div`\n    width: 100%;\n    overflow-y: scroll;\n    height: 32vh;\n`\n\nconst ordersRowStyle = {\n    padding: '0 .5rem',\n    textAlign: 'center' as const\n}\nconst ordersHeaderStyle = {\n    padding: '0 .5rem',\n    textAlign: 'center' as const\n}\n\n\nfunction Orders(props) {\n\n    const [activeOrders, setActiveOrders] = useState<any[]>([])\n    const [completedOrders, setCompletedOrders] = useState<any[]>([])\n    const [showCompleted, setShowCompleted] = useState(false)\n    const [showOrderCancelModal, setShowOrderCancelModal] = useState(false)\n    const [currentOrder, setCurrentOrder] = useState<any>(null)\n\n    useEffect(() => {\n\n        if (!props.appState.baseToken || !props.appState.pairedToken || !props.orderHistory) {\n            return\n        }\n\n        const activeOrderList: any[] = []\n        const completedOrderList: any[] = []\n\n        for (let oid in props.orderHistory) {\n            const order = props.orderHistory[oid]\n            const {id, orderType, side, amount, price, tickerFrom, tickerTo, trader, filled, complete} = order\n            if (props.appState.baseToken.ticker === tickerTo && props.appState.pairedToken.ticker === tickerFrom) {\n                complete ? completedOrderList.push(order) : activeOrderList.push(order)\n            }\n        }\n\n        setActiveOrders(() => activeOrderList.sort((a,b) => (a.ticker > b.ticker ? 1 : -1)))\n        setCompletedOrders(() => completedOrderList.sort((a,b) => (a.ticker > b.ticker ? 1 : -1)))\n        \n\n    }, [props.appState.baseToken, props.appState.pairedToken, props.orderHistory])\n\n    const switchOrderType = () => {\n        setShowCompleted((prevState) => !prevState)\n    }\n\n    const handleOrderCancel = (order) => {\n        const {id, orderType, side, amount, price, tickerFrom, tickerTo, trader, filled, complete} = order\n        //console.log(`handleOrderCancel: ${id}, ${side}, ${tickerTo}, ${tickerFrom}, ${trader}`);\n        setCurrentOrder(() => order)\n        setShowOrderCancelModal(() => true)\n    }\n\n    const handleConfirmedOrderCancel = useCallback(() => {\n        const {id, orderType, side, amount, price, tickerFrom, tickerTo, trader, filled, complete} = currentOrder\n        //console.log(`handleConfirmedOrderCancel: ${id}, ${side}, ${tickerTo}, ${tickerFrom}, ${trader}`);\n        props.dexContract.methods.cancelOrder(id, side, tickerTo, tickerFrom).send({from: trader})\n        .then(() => {\n            setShowOrderCancelModal(() => false)\n        })\n        .catch(error => console.error(error))\n    }, [props.dexContract, currentOrder])   \n\n    const completedOrderTableView = completedOrders.map((order) => {\n        const {id, orderType, side, amount, price, tickerFrom, tickerTo, trader, filled, complete} = order\n        return (\n            <tr key={id}>\n                <td style={ordersRowStyle}>{id}</td>\n                <td style={ordersRowStyle}>{ORDER_TYPE[orderType]}</td>\n                <td style={ordersRowStyle}>{ORDER_SIDE[side]}</td>\n                <td style={ordersRowStyle}>\n                    {`${formatPrice(filled, props.appState.baseToken.decimals)} / ${formatPrice(amount, props.appState.baseToken.decimals)}`}\n                </td>\n                <td style={ordersRowStyle}>{`${formatPrice(price, props.appState.pairedToken.decimals)}`}</td>\n                <td style={ordersRowStyle}>{filled/amount * 100}</td>\n                <td style={ordersRowStyle}></td>\n            </tr>\n        )\n    })\n\n    const activeOrderTableView = activeOrders.map((order) => {\n        const {id, orderType, side, amount, price, tickerFrom, tickerTo, trader, filled, complete} = order\n        return (\n            <tr key={id}>\n                <td style={ordersRowStyle}>{id}</td>\n                <td style={ordersRowStyle}>{ORDER_TYPE[orderType]}</td>\n                <td style={ordersRowStyle}>{ORDER_SIDE[side]}</td>\n                <td style={ordersRowStyle}>\n                    {`${formatPrice(filled, props.appState.baseToken.decimals)} / ${formatPrice(amount, props.appState.baseToken.decimals)}`}\n                </td>\n                <td style={ordersRowStyle}>{`${formatPrice(price, props.appState.pairedToken.decimals)}`}</td>\n                <td style={ordersRowStyle}>{filled/amount * 100 < 1 && filled/amount * 100 > 0 ? '<1' : filled/amount * 100}</td>\n                <td style={ordersRowStyle}>\n                    <CancelOrderButton \n                    onClick={() => handleOrderCancel(order)}>\n                        <i className=\"fas fa-window-close\" />\n                    </CancelOrderButton>\n                </td>\n            </tr>\n        )\n    })\n\n    const buttonTitle = showCompleted ? \"Switch to Active Orders\" : \"Switch to Completed Orders\"\n\n    return (\n        !props.metamask.provider\n        ? \n        <OrdersAwaitDiv>\n            <p>Web3 provider is not connected</p>\n        </OrdersAwaitDiv>\n        : !props.metamask.currentAccount\n        ? \n        <OrdersAwaitDiv>\n            <p>Web3 account is not connected</p>\n        </OrdersAwaitDiv>\n        : !props.orderHistory \n        ? \n        <OrdersAwaitDiv>\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>\n        </OrdersAwaitDiv>\n        : (completedOrderTableView.length === 0) && (activeOrderTableView.length === 0)\n        ?\n        <OrdersAwaitDiv>\n            <p>No order history found</p>\n        </OrdersAwaitDiv>    \n        :\n        <OrdersDiv>\n            <OrderCancelModal \n                show={showOrderCancelModal} \n                handleShow={() => setShowOrderCancelModal(true)} \n                handleClose={() => setShowOrderCancelModal(false)} \n                order={currentOrder}\n                handleConfirmedAction={handleConfirmedOrderCancel}\n            />\n            <OrderTab>\n                <TabButton onClick={switchOrderType}><Title>{buttonTitle}</Title></TabButton>\n                    <ScrollableTable>\n                        <Table striped hover style={tableStyle}>\n                        <thead>\n                            <tr>\n                                <th style={ordersHeaderStyle}>Id</th>\n                                <th style={ordersHeaderStyle}>Side</th>\n                                <th style={ordersHeaderStyle}>Type</th>\n                                <th style={ordersHeaderStyle}>{`Filled / Quantity, ${props.appState.baseToken ? props.appState.baseToken.symbol : ''}`}</th>\n                                <th style={ordersHeaderStyle}>{`Price, ${props.appState.pairedToken ? props.appState.pairedToken.symbol : ''}`}</th>\n                                <th style={ordersHeaderStyle}>Filled, %</th>\n                                <th style={ordersHeaderStyle}>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {showCompleted ? completedOrderTableView : activeOrderTableView}\n                        </tbody>\n                    </Table>\n                </ScrollableTable>\n            </OrderTab>\n        </OrdersDiv>\n    )\n}\n\nexport default function DexTradeInfo(props) {\n\n    return (\n        <GrandParentContainer>\n        <ParentContainer>\n            <RowPanelBase>\n                <Chart />\n                <Orderbook orderBook={props.orderBook} appState={props.appState}/>\n            </RowPanelBase>\n            <RowPanelBase>\n                <Orders orderHistory={props.orderHistory} appState={props.appState} dexContract={props.dexContract} metamask={props.metamask}/>\n            </RowPanelBase>\n        </ParentContainer>\n        </GrandParentContainer>\n    )\n}\n","import styled from 'styled-components'\nimport { web3Networks } from '../config/config'\n\nconst FOOTER = styled.div`\n    height: 5vh;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-end;\n    color: #ccc;\n`\n\nexport default function AppStatusBar(props) {\n\n    const blockNumberString = 'Last synched block: ' + props.appState.blockNumber\n    const networkConfig = props.rpcProvider ? web3Networks.find((network) => (network.chainId === props.rpcProvider.chainId)) : undefined\n    const statusBarString = networkConfig !== undefined ? 'Connected to: ' + networkConfig.name : 'Not connected'\n\n    return (\n        <FOOTER hidden={props.hidden}>\n            <p>{statusBarString}</p>\n            <p>{blockNumberString}</p>\n        </FOOTER>\n    )\n}\n","import styled from 'styled-components'\nimport { useState, useEffect, useCallback } from 'react'\nimport { Table, Spinner, Button } from 'react-bootstrap'\nimport { ORDER_SIDE, ORDER_TYPE } from '../utils/enums'\nimport { formatPrice2, formatPrice, formatPriceUI } from '../utils/utils'\nimport { FundsModal, TokenErrorModal } from './Modals'\nimport React from 'react'\nimport Web3 from 'web3'\nimport { WITHDRAW, DEPOSIT, MINT, BURN } from '../utils/constants'\n\n\nconst ERC20_ABI = require('../../src/artifacts/TestToken.json').abi\nconst DEX_ABI = require('../../src/artifacts/Dex.json').abi\n\n\n// Generic styles for the page\nconst GrandParentContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n`\n\nconst ParentContainer = styled.div`\n    width: 1200px;\n    min-width: 1000px;\n`\nconst Panel = styled.div`\n    background:rgba(0, 0, 0,0.6);\n    height: 84.5vh;\n    border-radius: 10px;\n    text-align: left;\n    font-size: .75rem;\n    padding: 10px 0px 10px 0px;\n`\n\nconst ScrollableTable = styled.div`\n    width: 100%;\n    overflow-y: scroll;\n    height: 100%;\n`\nconst ActionButton = styled(Button)`\n    border-radius: 0;\n    background-color: rgba(0,0,0,0.0);\n    border: none;\n`\nconst DepositButton = styled(ActionButton)`\n    color: #00abff;\n`\nconst WithdrawButton = styled(ActionButton)`\n    color: #f00;\n`\nconst MintButton = styled(ActionButton)`\n    color: #00ff21;\n`\nconst BurnButton = styled(ActionButton)`\n    color: orange;\n`\n\nconst rowStyle = {\n    padding: '0 .5rem',\n    textAlign: 'center' as const,\n    verticalAlign: 'middle' as const\n}\nconst headerStyle = {\n    padding: '0 .5rem',\n    textAlign: 'center' as const\n}\nexport default function TokenList(props) {\n\n    const [tokens, setTokens] = useState<any>([])\n    const [showModal, setShowModal] = useState(false)\n    const [modalParams, setModalParams] = useState<any>({\n        symbol: 'Dummy', \n        amount: '0', \n        decimals: '1',\n        ticker: '',\n        balance: {dex: '0', wallet: '0'},\n        action: 0\n    })\n    const [showErrorModal, setShowErrorModal] = useState(false)\n    const [errorText, setErrorText] = useState('') \n\n    /**\n     * get tokens here. Kicks in on blockNumber, dexContract and metamask state changes\n     */\n     const getWalletBalance = useCallback(async (token) => {\n      \n        const web3Client = new Web3(props.metamask.provider);\n        let balance = await web3Client.eth.getBalance(props.metamask.currentAccount)\n        \n        // Get base token balance\n        if (token.address !== \"0x0000000000000000000000000000000000000000\" ) {\n          const baseTokenContract = new web3Client.eth.Contract(ERC20_ABI, token.address)\n          balance = await baseTokenContract.methods.balanceOf(props.metamask.currentAccount).call()\n        }\n        \n        return balance\n    }, [props.metamask.currentAccount, props.metamask.provider])\n\n    const getDexBalance = useCallback(async (token) => {\n        return await props.dexContract.methods.balances(props.metamask.currentAccount, token.ticker).call({from: props.metamask.currentAccount})\n    }, [props.metamask.currentAccount, props.dexContract])\n    \n    const updateBalances = useCallback(() => {\n\n        const tokenListPromise = props.appState.tokens.map(async (token) => {\n            return {\n                ...token,\n                balance: {\n                    dex: await getDexBalance(token),\n                    wallet: await getWalletBalance(token)\n                }\n            }\n        })\n\n        Promise.all(tokenListPromise)\n        .then((tokenList) => setTokens(() => tokenList))\n\n    }, [props.appState.blockNumber, props.appState.tokens, props.dexContract, props.metamask.currentAccount, props.rpcProvider, getWalletBalance, getDexBalance])\n\n    useEffect(() => {\n        \n        if (!props.dexContract || !props.metamask.currentAccount || !props.rpcProvider || !props.metamask.provider) {\n            return\n        }\n        \n        if (props.metamask.provider.chainId != props.rpcProvider.chainId) {\n            return\n        }\n        \n        updateBalances()\n\n    }, [updateBalances, getWalletBalance, getDexBalance])\n\n    const handleDeposit = async (token) => {\n        setModalParams(() => ({...token, action: DEPOSIT}))\n        setShowModal(() => true)\n    }\n    const handleWithdrawal = async (token) => {\n        setModalParams(() => ({...token, action: WITHDRAW}))\n        setShowModal(() => true)\n    }\n    const handleMint = async (token) => {\n        if (token.address === '0x0000000000000000000000000000000000000000') {\n            setErrorText(() => `Can't mint native coin ${token.symbol}. Please use official faucet`)\n            setShowErrorModal(() => true)\n            return\n        }\n        setModalParams(() => ({...token, action: MINT}))\n        setShowModal(() => true)\n    }\n    const handleBurn = async (token) => {\n        if (token.address === '0x0000000000000000000000000000000000000000') {\n            setErrorText(() => `Token ${token.symbol} can't be burned`)\n            setShowErrorModal(() => true)\n            return\n        }\n        setModalParams(() => ({...token, action: BURN}))\n        setShowModal(() => true)\n    }\n    const handleConfirmed = async (params) => {\n        \n        const web3Client = new Web3(props.metamask.provider)\n        const dex = new web3Client.eth.Contract(DEX_ABI, props.dexContract._address)\n        const erc20 = new web3Client.eth.Contract(ERC20_ABI, params.address)\n        \n        if (params.address === \"0x0000000000000000000000000000000000000000\") {\n            switch (params.action) {\n                case DEPOSIT:\n                    await dex.methods['deposit()']().send({from: props.metamask.currentAccount, value: params.amount })\n                    break\n                case WITHDRAW:\n                    await dex.methods['withdraw(uint256)'](params.amount).send({from: props.metamask.currentAccount })\n                    break\n                case MINT:\n                    break\n                case BURN:\n                    break\n                default:\n                    console.error(\"Wrong action paramter\")\n            } \n        }\n        else {\n            switch (params.action) {\n                case DEPOSIT:\n                    await erc20.methods.approve(props.dexContract._address, params.amount).send({from: props.metamask.currentAccount})\n                    await dex.methods['deposit(uint256,bytes32)'](params.amount, params.ticker).send({from: props.metamask.currentAccount})\n                    break\n                case WITHDRAW:\n                    await dex.methods['withdraw(uint256,bytes32)'](params.amount, params.ticker).send({from: props.metamask.currentAccount})\n                    break\n                case MINT:\n                    try {\n                        await erc20.methods.mint(props.metamask.currentAccount, params.amount).send({from: props.metamask.currentAccount})\n                    } catch (e) {\n                        setErrorText(() => `Token ${params.symbol} can't be minted. Use official ${params.symbol} faucet`)\n                        setShowErrorModal(() => true)\n                    }\n                    break\n                case BURN:\n                    try {\n                        await erc20.methods.burn(props.metamask.currentAccount, params.amount).send({from: props.metamask.currentAccount})\n                    } catch (e) {\n                        setErrorText(() => `Token ${params.symbol} can't be burned`)\n                        setShowErrorModal(() => true)\n                    }\n                    break\n                default:\n                    console.error(\"Wrong action paramter\")\n            }\n        }\n        updateBalances()\n    }\n\n    const rows = tokens.map((token) => {\n        const {symbol, ticker, address, decimals, balance} = token\n        return (<tr key={ticker}>\n            <td style={rowStyle}>{symbol}</td>\n            <td style={rowStyle}>{address}</td>\n            <td style={rowStyle}>{formatPriceUI(balance.dex, decimals)}</td>\n            <td style={rowStyle}>{formatPriceUI(balance.wallet, decimals)}</td>\n            <td style={rowStyle}>{decimals}</td>\n            <td style={rowStyle}>\n                <DepositButton variant='primary' onClick={() => handleDeposit(token)}><i className=\"fas fa-arrow-left\"/></DepositButton>\n                <WithdrawButton variant='primary' onClick={() => handleWithdrawal(token)}><i className=\"fas fa-arrow-right\"/></WithdrawButton>\n                <MintButton variant='primary' onClick={() => handleMint(token)}><i className=\"fas fa-coins\"/></MintButton>\n                <BurnButton variant='primary' onClick={() => handleBurn(token)}><i className=\"fas fa-burn\"/></BurnButton>\n            </td>\n        </tr>\n    )})\n\n    return (\n        <GrandParentContainer>\n        <ParentContainer>\n            <Panel>\n                <FundsModal \n                    show={showModal} \n                    handleShow={() => setShowModal(true)} \n                    handleClose={() => setShowModal(false)} \n                    params={modalParams}\n                    handleConfirmed={handleConfirmed}\n                />\n                <TokenErrorModal \n                    show={showErrorModal} \n                    handleShow={() => setShowErrorModal(true)} \n                    handleClose={() => setShowErrorModal(false)} \n                    text={errorText}\n                />\n                <ScrollableTable>\n                    <Table striped hover borderless>\n                    <thead>\n                        <tr>\n                            <th style={headerStyle}>Symbol</th>\n                            <th style={headerStyle}>Address</th>\n                            <th style={headerStyle}>Dex Balance</th>\n                            <th style={headerStyle}>Wallet Balance</th>\n                            <th style={headerStyle}>Decimals</th>\n                            <th style={headerStyle}>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                    </tbody>\n                </Table>\n                    </ScrollableTable>\n            </Panel>\n        </ParentContainer>\n        </GrandParentContainer>\n    )\n}\n","import styled from 'styled-components'\nimport React from 'react'\nimport { SocialIcon } from 'react-social-icons'\n\n// Generic styles for the page\nconst GrandParentContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    background:rgba(0, 0, 0,0.5);\n`\n\nconst ParentContainer = styled.div`\n    width: 90%;\n    min-width: 1000px;\n`\nconst TextDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 84.5vh;\n    border-radius: 10px;\n    text-align: left;\n    font-size: 1.25rem;\n    padding: 10px 0px 10px 0px;\n`\n\nconst Description = styled.div`\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n`\nconst Footer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n`\n\nexport default function Welcome() {\n    return (\n        <GrandParentContainer>\n        <ParentContainer>\n        <TextDiv>\n        <Description>\n        <h1>\n            DECENTRALIZED ERC20 TOKEN EXCHANGE\n        </h1>\n        <p style={{marginLeft: '3rem', marginBottom: '0'}}>\n            Powered by Solidity and ReactJS\n        </p>\n        </Description>\n        <Footer>\n            <SocialIcon fgColor=\"#ffffff\" url=\"https://github.com/sedoy107/dexapp\" />\n            <SocialIcon url=\"https://www.linkedin.com/in/sergey-gorbov-97536959/\" />\n            <SocialIcon fgColor=\"#ffffff\" url=\"https://github.com/sedoy107/iot_dex\" />\n        </Footer>\n\n        </TextDiv>\n        </ParentContainer>\n        </GrandParentContainer>\n    )\n}\n","// React tools\nimport React, {useState, useEffect, useCallback} from 'react'\nimport {HashRouter as Router, Route, Redirect} from 'react-router-dom'\n// Styling libraries\nimport styled from 'styled-components'\nimport 'bootswatch/dist/darkly/bootstrap.min.css'\nimport '@fortawesome/fontawesome-free/js/all'\n// App components\nimport AppHeader from './components/AppHeader'\nimport TokenPicker from './components/TokenPicker'\nimport DexDataPanel from './components/DexDataPanel'\nimport AppStatusBar from './components/AppStatusBar'\nimport TokenList from './components/TokenList'\nimport Welcome from './components/Welcome'\nimport { OrderModal } from './components/Modals'\n// Config\nimport { defaultWeb3Network } from './config/config'\n// Web3 imports\nimport Web3 from 'web3'\nimport { Subscription } from 'web3-core-subscriptions'\nimport { BlockHeader } from 'web3-eth'\nimport { Contract } from 'web3-eth-contract'\n// Constants\nimport { START_BLOCK } from './utils/constants'\n\nconst ERC20_ABI = require('../src/artifacts/ERC20.json').abi\n\ndeclare const window: any;\n\n// Default app state\nexport interface IToken {\n  address: string,\n  ticker: string,\n  symbol: string,\n  decimals: number\n}\nexport interface IAppState {\n  tokens: IToken[],\n  pairedTokenSet: IToken[],\n  blockNumber: number,\n  baseToken: IToken | any,\n  pairedToken: IToken | any,\n  tradeEnabled: boolean\n}\nconst defaultAppState = {\n  tokens: [],\n  pairedTokenSet: [],\n  blockNumber: 0,\n  baseToken: null,\n  pairedToken: null,\n  tradeEnabled: false\n}\n\nexport interface IMetamask {\n  provider: object | null,\n  chainId: number | null,\n  currentAccount: string | null,\n  balance: string\n}\n\nconst defaultMetamaskState = {\n  provider: null,\n  chainId: null,\n  currentAccount: null,\n  balance: '0'\n}\n\n// IRpcProvider\nexport interface IRpcProvider {\n  provider: Web3,\n  netId: number,\n  chainId: number,\n  blockHeadSubscription: Subscription<BlockHeader>,\n}\n\n// IPage\nexport interface IPage {\n  id: number,\n  title: string\n}\n\n// IOrderbookItem\nexport interface IOrderBookItem {\n  id: number,\n  price: number,\n  amount: number\n}\n\n// IOrderbook\nexport interface IOrderBook {\n  buy: IOrderBookItem[],\n  sell: IOrderBookItem[]\n}\n\n// Styles\nconst PageContainer = styled.div`\n  margin: 0px 10px 0px 10px;\n`\n\nconst Background = styled.div`\n  text-align: center;\n  height: 100vh;\n  background-image:radial-gradient(circle at top,\n  #004b77 0%, #222 100%);\n`\n\nfunction App() {\n  // States\n  const [rpcProvider, setRpcProvider] = useState<IRpcProvider | null>(null)\n  const [metamask, setMetamask] = useState<IMetamask>(defaultMetamaskState)\n  const [dexContract, setDexContract] = useState<Contract | null>(null)\n  const [appState, setAppState] = useState<IAppState>(defaultAppState)\n  const [orderModalShow, setOrderModalShow] = useState(false)\n  const [orderBook, setOrderBook] = useState<IOrderBook>({buy: [], sell: []})\n  const [orderHistory, setOrderHistory] = useState<any>(null)\n\n  const connectMetamask = useCallback( async (isInitialConnect: boolean) => {\n\n    const ethereum = window.ethereum\n\n    // Check if Metamask is not installed\n    if (typeof ethereum === 'undefined') {\n      setMetamask(() => (defaultMetamaskState))\n      return false\n    }\n    \n    const makeNewState = async (_isInitialConnect : boolean) => {\n      \n      // Initialize metamask rpc provider\n      const metamaskRpcProvider = new Web3(ethereum)\n      const chainId = _isInitialConnect || !ethereum.isConnected() ? await ethereum.request({ method: 'eth_chainId' }) : ethereum.chainId\n      const accounts = _isInitialConnect || !ethereum.isConnected() ? await ethereum.request({ method: 'eth_requestAccounts' }) : [ethereum.selectedAddress]\n      const currentAccount = accounts.length === 0 ? null : accounts[0]\n      const balance = currentAccount === null ? '0' : await metamaskRpcProvider.eth.getBalance(currentAccount)\n      setMetamask(() : IMetamask => {\n        return {\n          provider: ethereum,\n          chainId: chainId,\n          currentAccount: currentAccount,\n          balance: balance\n        }\n      })\n      setAppState((prevState) => {\n        return {\n          ...prevState,\n          // eslint-disable-next-line eqeqeq\n          tradeEnabled: chainId == defaultWeb3Network.chainId && currentAccount !== null\n        }\n      })\n    }\n\n    // Note that this event is emitted on page load.\n    // If the array of accounts is non-empty, you're already\n    // connected.\n    ethereum.on('accountsChanged', (newAccounts: string[]) => {\n      makeNewState(false)\n    });\n\n    // Subscribe for events only when the application loads for the first time\n    ethereum.on('chainChanged', (newChainId: number) => {\n      //makeNewState(false)\n      window.location.reload()\n    })\n\n    makeNewState(isInitialConnect)\n\n    return true\n  }, [])\n\n  /**\n   * @dev Initialize Metamask on page load\n   * \n   * Side effect depends on: window.ethereum\n   *  \n   * Cleanup: ?\n   * */ \n  useEffect(() => {\n    /**\n     * @dev React component lifecycle alias\n     * */\n    const componentWillMount = async () => {\n    const bRes = await connectMetamask(false)\n    console.log(bRes ? '[connectMetamask] - Success' : '[connectMetamask]: failure');\n    }\n\n    /**\n     * @dev Call the lifecycle function\n     * */\n    componentWillMount()\n  }, [connectMetamask])\n\n  const updateOrderBook = useCallback(() => {\n\n    if(!appState.pairedToken || !dexContract) {\n      setOrderBook(() => ({buy: [], sell: []}))\n      return\n    }\n\n    const BUY = 0\n    const SELL = 1\n\n    dexContract.methods.getOrderBook(BUY, appState.baseToken.ticker, appState.pairedToken.ticker).call()\n    .then(orderbook => {\n      setOrderBook((prevOrderBook) => {\n        console.log(\"Update BUY orderbook\");\n        return {\n          ...prevOrderBook,\n          buy: orderbook.map(({id, price, amount, filled}) => ({id: id, price: price, amount: amount - filled}))\n        }\n      })\n    })\n    .catch(err => {\n        console.error(err);\n    })\n\n    dexContract.methods.getOrderBook(SELL, appState.baseToken.ticker, appState.pairedToken.ticker).call()\n    .then(orderbook => {\n      setOrderBook((prevOrderBook) => {\n        console.log(\"Update SELL orderbook\");\n        return {\n          ...prevOrderBook,\n          sell: orderbook.map(({id, price, amount, filled}) => ({id: id, price: price, amount: amount - filled}))\n        }\n      })\n    })\n    .catch(err => {\n        console.error(err);\n    })\n\n  }, [dexContract, appState.pairedToken])\n\n  const updateChartData = () => {\n\n    if(!appState.baseToken) {\n      return\n    }\n\n    console.log(\"Placeholder for fetching chart data\");\n\n  }\n\n  /**\n   * @dev Initialize Network\n   * \n   * Side effect depends on: none (should run only once)\n   *  \n   * Cleanup: remove the subscription for network events\n   * */ \n  useEffect(() => {\n\n    /**\n     * - Initialize network\n     * - Subscribe for network events\n     * - Set rpcProvider state\n     */\n    const initNetwork = async () => {\n      // Connect to the primary network via WebSocket RPC provider\n      const rpcProvider = new Web3(defaultWeb3Network.url)\n      const netId = await rpcProvider.eth.net.getId()\n      const chainId = netId === defaultWeb3Network.netId ? defaultWeb3Network.chainId : await rpcProvider.eth.getChainId()\n\n      // Subscribe for newBlockHeaders events to track block updates\n      const subscription = rpcProvider.eth.subscribe('newBlockHeaders', (error, result) => {\n        if (!error) {\n          console.log(\"Subscribed: \" + result);\n          return;\n        }\n        console.error(error);\n      })\n      .on(\"connected\", function(subscriptionId){\n          console.log(subscriptionId);\n      })\n      .on(\"data\", function(blockHeader){\n          setAppState((prevState) => ({...prevState, blockNumber: blockHeader.number}))\n      })\n      .on(\"error\", console.error);\n  \n      setRpcProvider((prevState) => ({\n        provider: rpcProvider, \n        netId: netId,\n        chainId: chainId,\n        blockHeadSubscription: subscription,\n      }))\n\n      return true\n    }\n\n    /**\n     * @dev React component lifecycle alias\n     * */\n    const componentWillMount = async () => {\n      const bRes = await initNetwork()\n      console.log(bRes ? '[initNetwork] - Success' : '[initNetwork]: failure');\n    }\n\n    /**\n     * @dev Call the lifecycle function\n     * */\n    componentWillMount()\n\n    // useEffect cleanup:\n    return () => {\n      if(rpcProvider) {\n        rpcProvider.blockHeadSubscription.unsubscribe(function(error, success){\n          if (success) {\n              console.log('Successfully unsubscribed!');\n          }\n        })\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  /**\n   * @dev Initialize Smart Contract\n   * \n   * Side effect depends on: rpcProvider state\n   *  \n   * Cleanup: remove the subscription for contract events\n   * */ \n  useEffect(() => {\n\n    /**\n     * - Initialize smart contract\n     * - Subscribe for smart contract events\n     * - Set dexContract state\n     */\n    const initContract = async () => {\n      // Do nothing if the rpcProvider is not initialized\n      if (!rpcProvider) {\n        return false\n      }\n\n      // Read contract build JSON\n      const dexBuildObject = require('./artifacts/Dex.json')\n      \n      // Check if the contract was deployed to the given network\n      if (!dexBuildObject.networks.hasOwnProperty(rpcProvider.netId)) {\n        console.error('Contract hasn\\'t been deployed on the given network')\n        return false\n      }\n\n      // Initialize Dex contract from address and abi\n      const address = dexBuildObject.networks[rpcProvider.netId].address\n      const abi = dexBuildObject.abi;\n      const dexContract = new rpcProvider.provider.eth.Contract(abi, address)\n      \n      setDexContract(() => dexContract)\n\n      return true\n    }\n\n    /**\n     * @dev React component lifecycle alias\n     * */\n    const componentWillMount = async () => {\n      const bRes = await initContract()\n      console.log(bRes ? '[initContract] - Success' : '[initContract]: failure');\n    }\n\n    /**\n     * @dev Call the lifecycle function\n     * */\n    componentWillMount()\n\n    // useEffect cleanup:\n    // return the cleanup here\n\n  }, [rpcProvider])\n\n  /**\n   * @dev Initialize App State\n   * \n   * Side effect depends on: dexContract state\n   *  \n   * Cleanup: n/a\n   * */ \n  useEffect (() => {\n    /**\n     * - Initialize smart contract\n     * - Subscribe for smart contract events\n     * - Set dexContract and appState states\n     */\n    const initApp = async () => {\n      \n      // Aux function to get tokens from the contract \n      const getTokens = async (contract: Contract) => {\n        //debugger\n        const tokens = await contract.methods.getTokenList().call()\n        //debugger\n        return [...tokens]\n          .sort((a,b) => (a.ticker > b.ticker ? 1 : -1))\n          .filter((i,p,a) => {return !p || i.ticker !== a[p - 1].ticker})\n          .map((token) => ({address: token.tokenAddress, ticker: token.ticker, decimals: token.decimals, symbol:Web3.utils.toUtf8(token.ticker)}))\n      }\n      \n      // Check if any of the required states aren't ready yet\n      if (!dexContract || !rpcProvider) {\n        return false\n      }\n      \n      // Get current block number\n      const currentBlock = await rpcProvider.provider.eth.getBlockNumber()\n\n      // Get token list from the contract\n      const tokens = await getTokens(dexContract)\n\n      setAppState((prevState) => ({\n        ...prevState,\n        blockNumber: currentBlock,\n        tokens: tokens,\n        baseToken: tokens[0]\n      }))\n\n      return true\n    }\n\n    /**\n     * @dev React component lifecycle alias\n     * */\n    const componentWillMount = async () => {\n      const bRes = await initApp()\n      console.log(bRes ? '[initApp] - Success' : '[initApp]: failure');\n    }\n\n    /**\n     * @dev Call the lifecycle function\n     * */\n    componentWillMount()\n\n    // useEffect cleanup:\n    // return the cleanup callback\n\n  }, [dexContract, rpcProvider])\n\n  /**\n   * @dev Update Dex on baseToken change\n   * \n   * Side effect depends on: baseToken\n   *  \n   * Cleanup: n/a\n   * */ \n   useEffect (() => {\n\n    const getPairedTokens = async () => {\n\n      if (!appState.baseToken || !dexContract) {\n          return false\n      }\n\n      const pairPromises = appState.tokens\n      .filter((item,pos,arr) => (item.ticker !== appState.baseToken.ticker))\n      .map(async (token) => {\n          \n          return ({\n              ...token,\n              isValid: await dexContract.methods.pairs(appState.baseToken.ticker, token.ticker).call()\n          })\n      })\n      await Promise.all(pairPromises)\n      .then((pairs) => {\n          \n        const pairedTokenSet = pairs.filter((item,pos,arr) => (item.isValid === true))\n        .map((token) : IToken => ({address: token.address, ticker: token.ticker, symbol: token.symbol, decimals: token.decimals}))\n\n        const pairedToken = pairedTokenSet.length > 0 ? pairedTokenSet[0] : null\n        setAppState((prevState) : IAppState => {\n          return {\n            ...prevState,\n            pairedTokenSet: pairedTokenSet,\n            pairedToken: pairedToken\n          }\n        })\n      })\n      \n      return true\n  }\n    \n    /**\n     * @dev React component lifecycle alias\n     * */\n    const componentWillMount = async () => {\n      const bRes = await getPairedTokens()\n      console.log(bRes ? '[getPairedTokens] - Success' : '[getPairedTokens]: failure');\n    }\n\n    /**\n     * @dev Call the lifecycle function\n     * */\n    componentWillMount()\n\n    //useEffect cleanup:\n    // return the cleanup callback\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [appState.baseToken])\n\n  /**\n   * @dev Update Dex on when pairedToken changes\n   * \n   * Side effect depends on: updateOrderBook and updateChartData callbacks\n   *  \n   * Cleanup: n/a\n   * */ \n  useEffect (() => {\n\n    /**\n     * @dev React component lifecycle alias\n     * */\n    const componentWillMount = async () => {\n      updateOrderBook()\n      updateChartData()\n    }\n\n    /**\n     * @dev Call the lifecycle function\n     * */\n     componentWillMount()\n\n     //useEffect cleanup:\n     //return clean up callback\n\n  }, [dexContract, appState.pairedToken, appState.baseToken, appState.blockNumber])\n\n  /**\n   * @dev Update Dex on pairedToken and currentAccount change\n   * \n   * Side effect depends on: pairedToken and currentAccount\n   *  \n   * Cleanup: unsubscribe from DEX events for the particular account\n   * */ \n  useEffect (() => {\n\n    if(!dexContract || !metamask.currentAccount) {\n      return\n    }\n\n    const subscriptions = {\n      OrderCreated: null,\n      OrderFilled: null,\n      OrderRemoved: null\n    }\n    \n    const unsubscribe = () => {\n      for (let eventName in subscriptions) {\n        if (subscriptions[eventName]) {\n          subscriptions[eventName].unsubscribe()\n          console.log(`Unsubscribed from DEX ${eventName} events for trader ${metamask.currentAccount}`);\n        }\n      }\n    }\n\n    const subscribe = () => {\n      subscriptions.OrderCreated = dexContract.events.OrderCreated({\n        filter: {trader: metamask.currentAccount ? metamask.currentAccount : ''},\n        fromBlock: \"latest\"\n      }, function(error, event){ console.log(event); })\n      .on(\"connected\", function(subscriptionId){\n          console.log(`Subscribed for OrderCreated events for ${metamask.currentAccount}. SubscriptionId: ${subscriptionId}`);\n      })\n      .on('data', ({returnValues}) => {\n        setOrderHistory((prevOrderHistory) => {\n          const newOrderHistory = {...prevOrderHistory} \n          const {id, orderType, side, amount, price, tickerFrom, tickerTo, trader} = returnValues\n          newOrderHistory[id] = {\n            id:id,\n            orderType:orderType,\n            side:side,\n            amount:amount,\n            price:price,\n            tickerFrom:tickerFrom,\n            tickerTo:tickerTo,\n            trader:trader,\n            filled:0,\n            complete:false\n          }\n          \n          return newOrderHistory\n        })\n      })\n      .on('changed', (event) => {\n          // remove event from local database\n      })\n      .on('error', (error, receipt) => { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\n          console.error(error)\n      })\n\n      subscriptions.OrderFilled = dexContract.events.OrderFilled({\n        filter: {trader: metamask.currentAccount ? metamask.currentAccount : ''},\n        fromBlock: \"latest\"\n      }, function(error, event){ console.log(event); })\n      .on(\"connected\", function(subscriptionId){\n          console.log(`Subscribed for OrderFilled events for ${metamask.currentAccount}. SubscriptionId: ${subscriptionId}`);\n      })\n      .on('data', ({returnValues}) => {\n        setOrderHistory((prevOrderHistory) => {\n          const newOrderHistory = {...prevOrderHistory} \n          const {id, trader, price, filled} = returnValues\n          newOrderHistory[id].filled = Web3.utils.toBN(newOrderHistory[id].filled).lt(Web3.utils.toBN(filled)) ? filled : newOrderHistory[id].filled\n          return newOrderHistory\n        })\n    })\n      .on('changed', (event) => {\n          // remove event from local database\n      })\n      .on('error', (error, receipt) => { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\n          console.error(error)\n      })\n\n      subscriptions.OrderRemoved = dexContract.events.OrderRemoved({\n        filter: {trader: metamask.currentAccount ? metamask.currentAccount : ''},\n        fromBlock: \"latest\"\n      }, function(error, event){ console.log(event); })\n      .on(\"connected\", function(subscriptionId){\n          console.log(`Subscribed for OrderFilled events for ${metamask.currentAccount}. SubscriptionId: ${subscriptionId}`);\n      })\n      .on('data', ({returnValues}) => {\n          setOrderHistory((prevOrderHistory) => {\n            const newOrderHistory = {...prevOrderHistory} \n            const {id, trader, filled} = returnValues\n            newOrderHistory[id].complete = true\n            return newOrderHistory\n          })\n\n          /**\n           * TODO: withdraw funds to the wallet owned by `metamask.currentAccount`\n           * \n           * Buy order: withdraw the amount filled\n           * Sell order: withdraw the amount filled * price / pairedToken.decimals\n           * \n           * \n           */\n      })\n      .on('changed', (event) => {\n          // remove event from local database\n      })\n      .on('error', (error, receipt) => { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\n          console.error(error)\n      })\n    }\n\n    const processPastEvents = async () => {\n      \n      const evtOrderCreated = await dexContract.getPastEvents('OrderCreated', {\n        filter: {trader: metamask.currentAccount ? metamask.currentAccount : ''},\n        fromBlock: START_BLOCK,\n        toBlock: 'latest'\n      })\n\n      const evtOrderFilled = await dexContract.getPastEvents('OrderFilled', {\n        filter: {trader: metamask.currentAccount ? metamask.currentAccount : ''},\n        fromBlock: START_BLOCK,\n        toBlock: 'latest'\n      })\n\n      const evtOrderRemoved = await dexContract.getPastEvents('OrderRemoved', {\n        filter: {trader: metamask.currentAccount ? metamask.currentAccount : ''},\n        fromBlock: START_BLOCK,\n        toBlock: 'latest'\n      })\n\n      let orderHashTable = evtOrderCreated\n      .map(({returnValues}) => returnValues)\n      .reduce((obj, item) =>  (obj[item['id']] = {\n        id: item.id, \n        orderType: item.orderType, \n        side: item.side, \n        amount: item.amount, \n        price: item.price, \n        tickerFrom: item.tickerFrom, \n        tickerTo: item.tickerTo, \n        trader: item.trader,\n        filled: 0,\n        complete: false\n      }, obj), {})\n      \n      evtOrderFilled.forEach(({returnValues}) => {\n        const {id, trader, price, filled} = returnValues\n        orderHashTable[id].filled = Web3.utils.toBN(orderHashTable[id].filled).lt(Web3.utils.toBN(filled)) ? filled : orderHashTable[id].filled\n      })\n\n      evtOrderRemoved.forEach(({returnValues}) => {\n        const {id, trader, filled} = returnValues\n        orderHashTable[id].complete = true\n      })\n\n      setOrderHistory(() => orderHashTable)\n    }\n\n    /**\n     * @dev React component lifecycle alias\n     * */\n    const componentWillMount = async () => {\n      \n      processPastEvents()\n      subscribe()\n    }\n\n    /**\n     * @dev Call the lifecycle function\n     * */\n     componentWillMount()\n\n     //useEffect cleanup:\n     return unsubscribe\n\n  }, [metamask.currentAccount, dexContract])\n\n\n  const handleBaseTokenChange = (newBaseToken) => {\n    setAppState((prevState) => {\n      return {\n        ...prevState,\n        baseToken: newBaseToken\n      }\n    })\n  }\n\n  const handlePairedTokenChange = (newPairedToken) => {\n    setAppState((prevState) => {\n      return {\n        ...prevState,\n        pairedToken: newPairedToken\n      }\n    })\n  }\n\n  // React Render\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <Redirect to=\"/welcome\" />\n      </Route>\n      <Route exact path='/welcome'>\n        <Background>\n          <PageContainer>\n            <AppHeader title='ERC20 DEX' appState={appState} pageId={0} rpcProvider={rpcProvider} metamask={metamask} connectMetamask={connectMetamask}/>\n            <Welcome />\n            <AppStatusBar rpcProvider={rpcProvider} appState={appState} hidden={true}/>\n          </PageContainer>\n        </Background>\n      </Route>\n      <Route exact path='/trade'>\n        <Background>\n          <PageContainer>\n            <AppHeader title='ERC20 DEX' appState={appState} pageId={1} rpcProvider={rpcProvider} metamask={metamask} connectMetamask={connectMetamask}/>\n            <TokenPicker \n              appState={appState} \n              dexContract={dexContract} \n              handleBaseTokenChange={handleBaseTokenChange}\n              handlePairedTokenChange={handlePairedTokenChange}\n              showOrderModal={() => setOrderModalShow(true)}\n            />\n            <OrderModal \n              show={orderModalShow} \n              onHide={() => setOrderModalShow(false)} \n              metamask={metamask} \n              appstate={appState}\n              dexcontract={dexContract}\n            />\n            <DexDataPanel orderBook={orderBook} orderHistory={orderHistory} appState={appState} dexContract={dexContract} metamask={metamask}/>\n            <AppStatusBar rpcProvider={rpcProvider} appState={appState} hidden={false}/>\n          </PageContainer>\n        </Background>\n      </Route>\n      <Route exact path='/tokens'>\n        <Background>\n          <PageContainer>\n            <AppHeader title='DEX' appState={appState} pageId={2} rpcProvider={rpcProvider} metamask={metamask} connectMetamask={connectMetamask}/>\n              <TokenList appState={appState} rpcProvider={rpcProvider} metamask={metamask} dexContract={dexContract}/>\n            <AppStatusBar rpcProvider={rpcProvider} appState={appState} hidden={false}/>\n          </PageContainer>\n        </Background>\n      </Route>\n    </Router>\n  )\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// Web3config.json\nconst web3Networks = [\n    {\n      netId:5777,\n      chainId: 0x539,\n      url: 'ws://127.0.0.1:7545',\n      name: 'Local Ganache Chain'\n    },\n    {\n      netId:5777,\n      chainId: 0x1691,\n      url: 'ws://127.0.0.1:8545',\n      name: 'Ganache Cli Chain'\n    },\n    {\n      netId:0x2a,\n      chainId: 0x2a,\n      url: 'wss://kovan.infura.io/ws/v3/ef7d535d2fae48ab9e620c46dbd8788a',\n      name: 'Kovan Testnet'\n    }\n  ]\n  \nconst defaultWeb3Network = web3Networks[2]\n\nmodule.exports = {\n  web3Networks,\n  defaultWeb3Network,\n}"],"sourceRoot":""}